# Sample Quantumult Configuration (v1.0.19)
#
# Line started with ";" or "#" or "//" shall be comments.
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# SS-URI scheme can be found at https://shadowsocks.org/en/spec/SIP002-URI-Scheme.html
#


#
# Quantumult uses HEAD method send HTTP request to the server_check_url to test the proxy's status, the results should be two latencies, the first one is TCP handshake to the proxy server, the second one is the total time that Quantumult successfully received the HTTP response from the server_check_url. The lightning icon means that the TCP fast open is successful. If the server in section [server_local] or section [server_remote] has its own server_check_url, its own server_check_url will be used instead of the server_check_url in section [general].
#
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试（测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间），来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
#


#
# The dns_exclusion_list contains the domains that disabled the placeholder IP(240.*), domains that are not in the dns_exclusion_list all have placeholder IP enabled and have turned on the resolve-on-remote setting.
#


#
# The udp_whitelist contains the destination UDP port, empty means all the ports are in udp_whitelist. UDP packtes(through Quantumult tunnel interface) with destination ports that are not in the udp_whitelist will be dropped. This setting has nothing to do with the policy and has nothing to do with the proxy(server) port either.
#
# 参数 udp_whitelist 从 IP 层控制 UDP 数据是否需要舍弃；如舍弃，则该 UDP 请求不会进入规则模块以及策略模块，TCP/UDP 请求记录中也不会有相应的条目，但仍可在日志中查询到相关信息（日志等级 debug）。
# 该参数控制的是流入 Quantumult X Tunnel 的请求，并非 Quantumult X Tunnel 发出的请求，即不会作用于节点所使用的 UDP 目标端口。
#


#
# The fallback_udp_policy needs Quantumult X v1.0.19 and later.
# The fallback_udp_policy will be used when the server type (like VMess) does not support UDP relay or the udp-relay=true has not been set for server types like SS and SSR. The default value is reject.
#
# 参数 fallback_udp_policy 仅支持 v1.0.19 以及之后的版本。
# 参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。
# 当 UDP 请求经过规则模块以及策略模块后所命中的节点为 Quantumult X 所不支持 UDP 转发的节点（例如：VMess），或命中的节点虽支持 UDP 转发但节点配置未显示注明 udp-relay=true 的节点（例如：SS 或 SSR 且与服务器是否真实开启了 UDP 转发无关），则 fallback_udp_policy 会被使用。该参数默认值为 reject。
# 注意：如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
#


#
# The traffic to excluded_routes will not be handled by Quantumult. It is better to reboot your device after modification.
#


#
# The resource_parser_url sample can be found at https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
#


[general]
;profile_img_url=http://www.example.com/example.png
# 用于指定资源解析器（Resource Parser）的 URL。资源解析器通常是用于解析网页或其他资源的脚本，以提取有关页面或资源的信息，这些信息可以用于进一步的代理规则、重写规则或其他操作。
;resource_parser_url=http://www.example.com/parser.js
# 该配置项指定了一个 URL，Quantumult X 会使用该 URL 来检查代理服务器的可用性。这是一种常见的健康检查机制，用于确保代理服务器在运行并能够正常处理请求。
;server_check_url=http://www.google.com/generate_204 
# 用于指定用于地理位置检查的 URL 列表。这个配置项通常用于检查设备的地理位置信息，第一个url是返回节点的一些信息，第二个js表示解析第一个url返回的内容提供给quantumultx。
;geo_location_checker=http://www.example.com/json/, https://www.example.com/script.js
# running_mode_trigger=filter：运行模式触发器设置为 "filter"，这表示 Quantumult X 的运行模式将在请求过滤方面进行触发。
# filter：这个部分可能是指定了一个过滤器。过滤器通常是规则或脚本，用于根据某些条件过滤、修改或拦截请求。
# LINK_22E171:all_proxy： 这是一个代理设置，指定了名为 "LINK_22E171" 的代理组，并将其设置为 "all_proxy"，表示所有的流量将经过该代理组进行代理。
# LINK_22E172:all_direct: 同样是一个代理设置，指定了名为 "LINK_22E172" 的代理组，并将其设置为 "all_direct"，表示所有的流量都将直接连接，而不经过代理。\
# 当运行模式触发时，使用名为 "filter" 的过滤器对请求进行处理。根据过滤器的规则，一些请求可能会通过名为 "LINK_22E171" 的代理组进行代理，而另一些请求可能会直接连接，而不经过代理，这取决于 "LINK_22E171" 和 "LINK_22E172" 代理组的配置。
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct
# dns_exclusion_list 是一个配置项，用于指定在 DNS 解析中排除的域名列表。具体来说，这个配置项允许你列举一些域名，告诉 Quantumult X 不要使用代理进行 DNS 解析，而是直接使用本地的 DNS 服务器。
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me
# 用于指定被暂停代理的 Wi-Fi SSID 列表。这个配置项允许你列举一些 Wi-Fi 的 SSID，当你的设备连接到这些 Wi-Fi 网络时，Quantumult X 将暂停代理功能。
# wifi 的ssid就是WiFi名称
;ssid_suspended_list=LINK_22E174, LINK_22E175
# 用于指定允许通过 UDP 协议的端口列表。这个配置项通常用于配置白名单，以确保指定的 UDP 端口能够正常通信，而其他端口则被阻止或代理。
# 这表示允许通过 UDP 协议的端口有：
#   53（DNS）
#   123（NTP，网络时间协议）
#   1900（SSDP，简单服务发现协议）
#   80 到 443 之间的所有端口（HTTP 和 HTTPS）
;udp_whitelist=53, 123, 1900, 80-443
# fallback_udp_policy=reject 可能用于说明或提醒用户，对于 UDP 协议的代理请求，如果无法建立连接或代理失败，将采取的策略是 "reject"。这表示在 UDP 代理失败的情况下，将拒绝这些请求，而不是尝试其他的备用策略。
;fallback_udp_policy=reject
# 用于指定要排除的路由。这个配置项通常用于定义不经过代理的 IP 地址范围，以便在这些地址范围内的流量不受代理的影响。
#   192.168.0.0 到 192.168.255.255（CIDR 表示法为 192.168.0.0/16）。
#   172.16.0.0 到 172.31.255.255（CIDR 表示法为 172.16.0.0/12）。
#   100.64.0.0 到 100.127.255.255（CIDR 表示法为 100.64.0.0/10）。
#   10.0.0.0 到 10.255.255.255（CIDR 表示法为 10.0.0.0/8）
;excluded_routes= 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
# 用于启用 ICMP（Internet Control Message Protocol）自动回复功能。
# ICMP 是一种网络协议，用于在 IP 网络上发送控制消息，用于检测网络连接、执行诊断、错误报告等。常见的 ICMP 消息包括 Ping 请求和回复、Traceroute 等。
# 当设置 icmp_auto_reply=true 时，Quantumult X 将会自动回复收到的 ICMP Ping 请求。这可以让其他设备或网络工具向 Quantumult X 发送 Ping 请求，并获取到响应，从而确认 Quantumult X 是否在网络上可达。
;icmp_auto_reply=true

#
# The DNS servers fetched from current network(system) will always be used for better performance(you can disable this feature by using "no-system", but you should at least add one customized DNS server like "server=223.5.5.5").
# The result of query will only be used for evaluating filter or connecting through direct policy, when connecting through server the result will not be used and Quantumult will never know the destination IP of related domain.
# Specially directly set 127.0.0.1 for a domain is not allowed in here. if you want some domain(eg: example.com) to be 127.0.0.1, just add "host, example.com, reject" to the "filter_local" section. The reject action will return DNS response with 127.0.0.1 to the query.
#

# 这些配置指定了多个 DNS 服务器，Quantumult X 将使用它们来进行域名解析。如果你希望 Quantumult X 忽略系统的 DNS 设置，而使用自己配置的 DNS 服务器，可以取消注释 no-system 行（删除前面的分号）。
# 在 DNS 解析规则中，一般不支持直接指定端口号。DNS 解析规则用于将域名解析为 IP 地址，而不涉及端口号。端口号是在建立实际的连接时使用的，而不是在 DNS 解析阶段。
[dns]
;no-system
server=223.5.5.5 # 是中国电信提供的 DNS 服务器地址。
server=114.114.114.114 # 是中国联通提供的 DNS 服务器地址。
server=119.29.29.29 # 119.29.29.29 是 DNSPod 提供的公共 DNS 服务器地址。
server=8.8.8.8 #  是 Google 提供的公共 DNS 服务器地址。
;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
# address=：这是一个 DNS 解析规则。
# /example6.com/：表示需要解析的域名。在这个例子中，是 example6.com。
# 192.168.16.18：表示将 example5.com 解析到的 IP 地址。在这个例子中，是 192.168.16.18。
# 这意味着，当 Quantumult X 遇到需要解析 example5.com 的请求时，它将返回 192.168.16.18 这个 IP 地址，而不是向公共 DNS 服务器发出请求。这种配置通常用于局域网环境下的域名解析，以便将内部域名解析到内部服务器的内部 IP 地址。
;address=/example5.com/192.168.16.18 
# 这意味着，当 Quantumult X 遇到需要解析 example6.com 的请求时，它将返回 2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3 这个 IPv6 地址，而不是向公共 DNS 服务器发出请求。
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]

#
# static policy points to the server in candidates you manually selected.
# available policy points to the first available server in candidates based on server_check_url(concurrent url latency test will be immediately launched when the policy has been triggered and the policy result is unavailable. If no network request is taking the policy at that time, that means the policy is in the idle state and the test won't be launched even if the server is down. At that time you can update the server status by manually launching the test, but it doesn't make any sense).
# round-robin policy points to the next server in candidates for next connection.
# ssid policy points to the server depending on the network environment.
#
# 测裸足
[policy]
# 在 Quantumult X 中，static 是用于配置静态策略组的一种方式。静态策略组是一种手动配置的策略组，其中的成员是固定的，不会随着时间或特定条件的变化而改变。
# policy-name-1、策略组名称
# Sample-A、Sample-B、Sample-C 是静态策略组的成员，这些成员可以是策略组名称、代理节点名称等。
# img-url=http://example.com/icon.png 指定了静态策略组的图标地址，用于在 Quantumult X 的界面中显示。在这个例子中，图标地址是 http://example.com/icon.png。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png
# 在 Quantumult X 中，available 是用于配置可用策略组的一种方式。可用策略组是指用户可以在 Quantumult X 中手动选择的策略组，这些策略组通常是从已配置的策略组中选择的一部分。
# policy-name-2、策略组名称
# Sample-A、Sample-B、Sample-C 是可用策略组的成员，这些成员可以是策略组名称、代理节点名称等。
# 这样的配置允许你定义一组可用策略组，用户可以在 Quantumult X 的界面中手动选择其中的一个策略组来应用于代理规则。
;available=policy-name-2, Sample-A, Sample-B, Sample-C
# 在 Quantumult X 中，round-robin 是一种负载均衡策略，用于指定一组节点（可以是策略组或者直接指定节点名称），Quantumult X 将会按照循环轮询的方式依次选择这些节点来进行代理。
# policy-name-3、策略组名称
# Sample-A、Sample-B、Sample-C 是负载均衡策略中的节点，这些节点可以是策略组名称或者直接指定的节点名称。
# 这样的配置允许你创建一个负载均衡策略组，其中包含多个节点。当 Quantumult X 使用这个策略组进行代理时，它将会按照轮询的方式依次选择这些节点来进行代理请求。这样可以实现负载均衡，使每个节点都能够平均分担流量负载。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C
# 在 Quantumult X 中，ssid 是一种基于 Wi-Fi SSID（Service Set Identifier，即无线网络名称）的策略组配置。这意味着你可以根据连接到的 Wi-Fi 网络来自动选择代理策略。
# policy-name-4 是默认的策略组名称，当设备连接到未在配置中列出的 Wi-Fi 网络时将使用该策略组。
# Sample-A 和 Sample-B 是策略组的成员，表示默认的代理策略组中包含的节点名称。
# 这意味着当设备连接到 SSID 为 LINK_22E171 的 Wi-Fi 网络时，将使用 Sample-B 节点作为代理；当连接到 SSID 为 LINK_22E172 的 Wi-Fi 网络时，将使用 Sample-C 节点作为代理。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C



# 其他配置项
# server-tag-regix: 用于匹配远程服务器列表中的标签（Tag）。匹配成功的服务器将会被加入到相应的策略组中。值为正则表达式
# check-interval: 用于指定节点检查的时间间隔。具体来说，这个配置项用于设置代理节点的健康检查的时间间隔。值为数字，单位为秒，
# opt-parser=true: 用于启用或禁用 URL 解析器的优化模式。值为true或false
# update-interval: 用于设置远程资源更新的时间间隔。具体来说，它用于指定自动更新远程资源（例如服务器列表、规则文件等）的时间间隔。值为数字，单位秒
# as-policy=static: 用于指定 AutoSwitch（自动切换）功能的策略。AutoSwitch 功能允许根据网络环境自动切换代理策略。 有三个内置策略：auto，fallback，failover
# force-policy: 是一个配置项，用于强制指定一个策略组，无论当前网络环境如何。这意味着，不管当前连接到的网络是什么，都会强制使用指定的策略组进行代理。
# 

# 常见内置策略
# direct：直连模式，即不使用代理，直接连接到目标服务器。
# reject：拒绝模式，即拒绝所有连接请求。
# auto：自动模式，根据当前网络环境自动选择最佳的代理策略。
# fallback：后备模式，如果当前策略不可用，则切换到备用策略。
# failover：故障转移模式，如果当前策略不可用，则切换到备用策略，并定期检测主策略的可用性，当主策略恢复时再切换回主策略。



#
# Params "tag" and "enabled" are optional.
# The default sync interval for all kinds of remote resources is 86400 seconds.
# You can set update-interval=172800 to customize your auto sync interval(seconds), negative number means disable auto sync.
#
[server_remote]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt, tag=Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt, opt-parser=true, tag=Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt, update-interval=-1, tag=Sample-01
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server-complete.txt, tag=Sample-02, as-policy=static, img-url=http://example.com/icon.png, enabled=false

#
# Params "tag", "force-policy" and "enabled" are optional.
# When there is a force-policy, then the policy in filter of remote resource will be ignored and the force-policy will be used.
#
[filter_remote]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/filter.txt, tag=Sample, force-policy=your-policy-name, enabled=true

#
# Params "tag" and "enabled" are optional.
#
[rewrite_remote]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-import-rewrite.txt, tag=Sample, enabled=true

#
# Only obfs=http, obfs=ws, obfs=wss can have optional "obfs-uri" field.
# The obfs-host param in wss will be used for TLS handshake and for HTTP header host field, if obfs-host is not set for wss the server address will be used.
# The UDP relay for VMess and Trojan is not currently supported.
# When using obfs=ws and obfs=wss the server side can be deployed by v2ray-plugin with mux = 0 or by v2ray-core.
# The obfs plugin tls1.2_ticket_auth has one more RTT than tls1.2_ticket_fastauth and obfs tls, you'd better use tls1.2_ticket_fastauth instead.
# The method chacha20-ietf-poly1305 and chacha20-poly1305 have the same effect in VMess configuration.
#
[server_local]
# Optional field tls13 is only for shadowsocks obfs=wss
;shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=ss-01
;shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=ss-02
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=ss-03
;shadowsocks=example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=ssr
;shadowsocks=example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=ss-ws-01
;shadowsocks=example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=ss-ws-02
;shadowsocks=example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=ss-ws-tls-01
;shadowsocks=example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=ss-ws-tls-02
#
# Optional field tls13 is only for vmess obfs=over-tls and obfs=wss
;vmess=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=vmess-01
;vmess=example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=vmess-02
;vmess=example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, fast-open=false, udp-relay=false, tag=vmess-tls-01
;vmess=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, fast-open=false, udp-relay=false, tag=vmess-tls-02
;vmess=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, tls13=true, fast-open=false, udp-relay=false, tag=vmess-tls-03
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-01
;vmess=192.168.1.1:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-02
;vmess=example.com:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-tls-01
;vmess=192.168.1.1:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-tls-02
;vmess=192.168.1.1:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=vmess-ws-tls-03
#
# Optional field tls13 is only for http over-tls=true
;http=example.com:80,fast-open=false, udp-relay=false, tag=http-01
;http=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http-02
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls-01
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls13=true, fast-open=false, udp-relay=false, tag=http-tls-02
#
# Optional field tls13 is only for trojan over-tls=true
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-01
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-03
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-04

[filter_local]
;user-agent, ?abc*, proxy
;host, www.google.com, proxy
;host-keyword, adsite, reject
;host-suffix, googleapis.com, proxy
;ip6-cidr, 2001:4860:4860::8888/32, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
# geoip：表示这是一个 GeoIP 类型的规则，用于匹配访问者的地理位置。
# cn：表示匹配的地理位置，这里的 cn 代表中国。GeoIP 数据库中通常使用两个字母的国家代码来表示不同的国家和地区，其中 cn 是代表中国的国家代码。
geoip, cn, direct 
final, proxy


#
# The "reject" returns HTTP status code 404 with no content.
# The "reject-200" returns HTTP status code 200 with no content.
# The "reject-img" returns HTTP status code 200 with content of 1px gif.
# The "reject-dict" returns HTTP status code 200 with content of empty json object.
# The "reject-array" returns HTTP status code 200 with content of empty json array.
# The "request-header" works for all the http headers not just one single header, so you can match two or more headers including CRLF in one regular expression.
# The length and encoding related HTTP header fields will be automatically processed by Quantumult if the "rewrite" is body related, so you should not handle them by yourself. The max supported response size is 1024kB(decompressed) for response-body and script-response-body.
# The body related rewrite will not be executed if the body is empty.
# When using javascript in rewrite, you can use those objects: $request, $response, $notify(title, subtitle, message), console.log(message) and Quantumult's built-in objects all have prefix "$".
# Supports: $request.scheme, $request.method, $request.url, $request.path, $request.headers, $response.statusCode, $response.headers, $response.body
# The $notify(title, subtitle, message) will post iOS notifications if Quantumult notification has been enabled.
# The $prefs is for persistent store: $prefs.valueForKey(key), $prefs.setValueForKey(value, key), $prefs.removeValueForKey(key), $prefs.removeAllValues().
# The console.log(message)  will output logs to Quantumult log file if the log level is "debug".
# The setTimeout(function() { }, interval) will run function after interval(ms).
# The scripts for script-request-header, script-request-body, script-response-header, script-response-body and script-echo-response should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X
#

# url reject：拒绝匹配到的 URL 请求。
# url reject-img：拒绝匹配到的 URL 请求，并显示默认的图片。
# url reject-200：拒绝匹配到的 URL 请求，并返回 HTTP 状态码 200。
# url reject-dict：拒绝匹配到的 URL 请求，并返回字典格式的响应。
# url reject-array：拒绝匹配到的 URL 请求，并返回数组格式的响应。
# url 302：对匹配到的 URL 请求执行 302 重定向。
# url 307：对匹配到的 URL 请求执行 307 临时重定向。
# url request-header：修改匹配到的 URL 请求的请求头。
# url request-body：修改匹配到的 URL 请求的请求体。
# url response-body：修改匹配到的 URL 请求的响应体。
# url script-response-body：使用脚本来处理匹配到的 URL 请求的响应体。
# url script-echo-response：使用脚本来处理匹配到的 URL 请求的响应体，并将结果打印到日志中。
# url script-response-header：使用脚本来处理匹配到的 URL 请求的响应头。
# url script-request-header：使用脚本来处理匹配到的 URL 请求的请求头。
# url script-request-body：使用脚本来处理匹配到的 URL 请求的请求体。
[rewrite_local]
;^http://example\.com/resource1/1/ url reject
;^http://example\.com/resource1/2/ url reject-img
;^http://example\.com/resource1/3/ url reject-200
;^http://example\.com/resource1/4/ url reject-dict
;^http://example\.com/resource1/5/ url reject-array
;^http://example\.com/resource2/ url 302 http://example.com/new-resource2/
;^http://example\.com/resource3/ url 307 http://example.com/new-resource3/
;^http://example\.com/resource4/ url request-header ^GET /resource4/ HTTP/1\.1(\r\n) request-header GET /api/ HTTP/1.1$1
;^http://example\.com/resource4/ url request-header (\r\n)User-Agent:.+(\r\n) request-header $1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36$2
;^http://example\.com/resource5/ url request-body "info":\[.+\],"others" request-body "info":[],"others"
;^http://example\.com/resource5/ url response-body "info":\[.+\],"others" response-body "info":[],"others"
;^http://example\.com/resource6/ url script-response-body response-body.js
;^http://example\.com/resource7/ url script-echo-response script-echo.js
;^http://example\.com/resource8/ url script-response-header response-header.js
;^http://example\.com/resource9/ url script-request-header request-header.js
;^http://example\.com/resource10/ url script-request-body request-body.js



#
# The $task.fetch() compose a HTTP request and deal with the response, only text body is supported. A $task.fetch() can be embeded in the completion handler of another $task.fetch(), if you want serial requests not current requests.
# The scripts should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
# The default HTTP request timeout is 10 seconds.
#
# Supports 5 fields of cron excluding the command field.
#
[task_local]
;* * * * * sample-task.js


#
# Only the TLS SNI or destination address in "hostname" will be handled by MitM.
#
# You should always keep your CA passphrase and p12 private.
#
[mitm]
# 用于设置中间人攻击时所需的密码。通常情况下，当拦截 HTTPS 流量时，需要提供一个密码以解密 SSL/TLS 连接。如果有设置密码，则应填写在此处。
;passphrase =
# 用于指定包含 SSL/TLS 证书和密钥的 PKCS#12 格式文件的路径。这个文件包含了用于拦截和解密 HTTPS 流量所需的证书和密钥。
;p12 =
# 指定是否跳过验证证书的有效性。如果设置为 true，则 Quantumult X 将不会验证目标服务器的 SSL/TLS 证书的有效性，而是直接接受所有证书。默认值为 false。
;skip_validating_cert = false
# 指定是否强制使用 Server Name Indication (SNI) 扩展来发送主机名信息。如果设置为 true，则 Quantumult X 将在握手阶段使用 SNI 扩展发送主机名信息。默认值为 false。
;force_sni_domain_name = false
# 用于指定需要强制使用特定证书的主机名列表。在这个例子中，列出了两个主机名，*.example.com 和 *.sample.com。这意味着 Quantumult X 将会为这些主机名使用指定的证书，而不是自动获取服务器提供的证书。
;hostname = *.example.com, *.sample.com
